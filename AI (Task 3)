# -*- coding: utf-8 -*-
"""CodeSoft (AI Task 3)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QZnSe58N3sohstd_c8FV12X3yD-_YQCc
"""

import pandas as pd

import numpy as np

df = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

y = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

y.shape

y

x = y['Movie_Genre']+''+y['Movie_Keywords']+''+y['Movie_Tagline']+''+y['Movie_Cast']+''+y['Movie_Director']

x.shape

x

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

x = tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

similarity_score = cosine_similarity(x)

similarity_score

similarity_score.shape

Favourite_Movie_Name = input('Enter your favourite movie name')

All_Movie_Title_List = df['Movie_Title'].tolist()

import difflib

Movie_Recommendation = difflib.get_close_matches(Favourite_Movie_Name, All_Movie_Title_List)

print(Movie_Recommendation)

Close_Match = Movie_Recommendation[0]

print(Close_Match)

Index_Of_Close_Match_Movie = df[df.Movie_Title == Close_Match]['Movie_ID'].values[0]

print(Index_Of_Close_Match_Movie)

Recommendation_Score = list(enumerate(similarity_score[Index_Of_Close_Match_Movie]))

print(Recommendation_Score)

len(Recommendation_Score)

Sort_Similar_Movies = sorted(Recommendation_Score, key = lambda x:x[1], reverse = True)

print(Sort_Similar_Movies)

print('Top 30 Movies suggested for you: \n')
i=1
for movie in Sort_Similar_Movies:
    index = movie[0]
    title_from_index = df[df.index == index]['Movie_Title'].values[0]
    if (i<31):
        print(i, '.', title_from_index)
        i+=1

Movie_Name=input('Enter your favourite movie: ')
list_of_all_titles = df['Movie_Title'].tolist()
Find_Close_Match = difflib.get_close_matches(Movie_Name, list_of_all_titles)
Close_Match = Find_Close_Match[0]
Index_Of_Movie = df[df.Movie_Title == Close_Match]['Movie_ID'].values[0]
Recommendation_Score = list(enumerate(similarity_score[Index_Of_Close_Match_Movie]))
Sort_Similar_Movies = sorted(Recommendation_Score, key = lambda x:x[1], reverse = True)
print('Top 10 movies suggested for you: \n')
i=1
for movie in Sort_Similar_Movies:
    index = movie[0]
    title_from_index = df[df.Movie_ID == index]['Movie_Title'].values
    if (i<11):
        print(i, '.', title_from_index)
        i+=1

